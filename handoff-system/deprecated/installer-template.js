/**
 * Installer Template for Handoff Publisher
 *
 * This module provides the template for the installer script.
 * It generates a script using the assembled source code from components.
 */

const fs = require('fs');
const path = require('path');

/**
 * Initialize the module with dependencies
 * @param {Object} dependencies - Object containing module dependencies
 */
function initialize(dependencies) {
  // This module doesn't require any dependencies for initialization
  return module.exports;
}

/**
 * Generate the installer script template
 * @param {Object} fileContents - Collection of all files to embed
 * @param {Object} publishConfig - Publish configuration
 * @param {Object} sourceFunctions - Source code for utility functions from components
 * @returns {string} The installer script content
 */
function generateInstallerTemplate(fileContents, publishConfig, sourceFunctions) {
  // Create sections with extracted function implementations from each component
  const functionSections = [];
  
  // Add each component's code as a section
  for (const [componentName, sourceCode] of Object.entries(sourceFunctions)) {
    if (sourceCode && sourceCode.trim()) {
      functionSections.push(`// ============= ${componentName.toUpperCase()} FUNCTIONS =============\n${sourceCode}`);
    }
  }
  
  // Join all function sections
  const allFunctions = functionSections.join('\n\n');

  return `#!/usr/bin/env node
/**
 * Handoff Manager Standalone Installer (v${publishConfig.version})
 *
 * This is a self-contained script that installs the complete Handoff Manager system.
 * It includes all necessary files and will create the proper directory structure.
 *
 * Generated by handoff-publisher
 *
 * Usage:
 *   node handoff-manager-installer.js [target-directory]
 *
 * If target-directory is not specified, it uses the current directory.
 */

const fs = require('fs');
const path = require('path');

// Get the script directory path
const scriptDir = __dirname;
// Get target directory (either specified by user or current directory)
const targetDir = process.argv[2] ? path.resolve(process.argv[2]) : process.cwd();

console.log(\`
╔══════════════════════════════════════════════════╗
║                                                  ║
║            Handoff Manager Installer             ║
║                                                  ║
╚══════════════════════════════════════════════════╝
\`);

console.log(\`Installing Handoff Manager v${publishConfig.version} to: \${targetDir}\`);

// Files to be created (stored as normalized paths with base64 encoded content)
const BASE64_FILES = {
${Object.entries(fileContents)
  .map(([filePath, content]) => `  "${filePath}": "${content}"`)
  .join(',\n')}
};

// Configuration for installation
const CONFIG = ${JSON.stringify({
  directories: publishConfig.directories,
  installOptions: publishConfig.installOptions,
  nextSteps: publishConfig.nextSteps,
  documentation: publishConfig.documentation
}, null, 2)};

${allFunctions}

// Files object with decoded content (for internal use)
const FILES = Object.fromEntries(
  Object.entries(BASE64_FILES).map(([filePath, content]) => [filePath, decodeBase64(content)])
);

// Main installation function
async function installHandoffManager() {
  try {
    // First backup any existing handoff system
    const backupPaths = CONFIG.installOptions.createBackups ? 
      backupExistingInstallation(targetDir) : {};
    
    // Write all files to the target directory
    writeAllFiles(targetDir, FILES);
    
    // Create handoffs directory if it doesn't exist
    const targetHandoffsDir = path.join(targetDir, 'handoffs');
    ensureDir(targetHandoffsDir);
    
    // Merge configuration files if needed
    processConfigMerging(targetDir, CONFIG, FILES);
    
    // Display success message and next steps
    console.log(\`
╔══════════════════════════════════════════════════╗
║                                                  ║
║         Handoff Manager Install Complete         ║
║                                                  ║
╚══════════════════════════════════════════════════╝

The Handoff Manager (v${publishConfig.version}) has been installed to \${targetDir}

Files installed:
- Custom mode in .roomodes
- Handoff rules in .clinerules
- System prompt (if applicable)
\${CONFIG.directories.map(dir => \`- \${dir.target}\`).join('\\n')}
\${Object.keys(backupPaths).length > 0 ? \`
Backup created:\` : ''}
\${Object.entries(backupPaths).map(([dir, path]) => \`- Previous \${dir} preserved in \${path}\`).join('\\n')}

Next Steps:
\${CONFIG.nextSteps.map(step => \`\${step}\`).join('\\n')}

For documentation, see:
\${CONFIG.documentation.map(doc => \`- \${doc}\`).join('\\n')}\`);
    
    return true;
  } catch (error) {
    console.error('Error during installation:', error);
    return false;
  }
}

// Execute the installation
installHandoffManager();`;
}

module.exports = {
  initialize,
  generateInstallerTemplate
};